{"version":3,"sources":["lib/jsonlint.js"],"names":["global","factory","exports","module","define","amd","self","jsonlint","this","Uni","isWhiteSpace","x","isWhiteSpaceJSON","isLineTerminator","isLineTerminatorJSON","isIdentifierStart","NonAsciiIdentifierStart","test","isIdentifierPart","NonAsciiIdentifierPart","isHexDigit","isOctDigit","isDecDigit","unescapeMap","'","\"","\\","b","f","n","r","t","v","/","parseCustom","input","options","reviver","String","json5","mode","ignoreComments","ignoreTrailingCommas","allowSingleQuotedStrings","allowDuplicateObjectKeys","inputLength","length","lineNumber","lineStart","position","stack","generateMessage","message","token","JSON","stringify","createError","column","texts","getTexts","error","SyntaxError","reason","exzerpt","pointer","location","start","line","offset","fail","newLine","char","parseGeneric","parseString","parseObject","parseArray","parseNumber","parseKeyword","undefined","parseKey","result","rollback","parseIdentifier","skipWhiteSpace","skipComment","multiLine","keyword","startPosition","i","keywordLength","emptyObject","isNotEmpty","key","push","value","pop","item","toNumber","isOctal","string","substr","parseInt","replace","Number","isNaN","match","NaN","isHex","sign","fromCharCode","endChar","count","digits","charCodeAt","returnValue","getLineAndColumn","lines","split","pastInput","Math","max","previous","upcomingInput","rest","next","min","getPositionContext","past","upcoming","Array","join","getReason","firstCharacter","charAt","toUpperCase","getLocationOnV8","exec","index","checkUnexpectedEndOnV8","getLocationOnSpiderMonkey","getOffset","improveNativeError","parseNative","parse","Parser","deprecate","console","warn","processOptions","call","changed","restoreContext","option","isSafari","navigator","userAgent","vendor","oldNode","process","version","startsWith","needsCustomParser","getReviver","prototype","constructor","parser","Object","defineProperty"],"mappings":"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","file":"jsonlint.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('jsonlint', ['exports'], factory) :\n  (global = global || self, factory(global.jsonlint = {}))\n}(this, function (exports) { 'use strict'\n\n// Modified from https://github.com/rlidwka/jju/blob/master/lib/unicode.js\n\n// This is autogenerated with esprima tools, see:\n// https://github.com/ariya/esprima/blob/master/esprima.js\n\nvar Uni = { // eslint-disable-line no-unused-vars\n  isWhiteSpace: function isWhiteSpace (x) {\n    // section 7.2, table 2\n    return x === '\\u0020' ||\n        x === '\\u00A0' ||\n        x === '\\uFEFF' || // <-- this is not a Unicode WS, only a JS one\n        (x >= '\\u0009' && x <= '\\u000D') || // 9 A B C D\n\n        // + whitespace characters from unicode, category Zs\n        x === '\\u1680' ||\n        (x >= '\\u2000' && x <= '\\u200A') || // 0 1 2 3 4 5 6 7 8 9 A\n        x === '\\u2028' ||\n        x === '\\u2029' ||\n        x === '\\u202F' ||\n        x === '\\u205F' ||\n        x === '\\u3000'\n  },\n  isWhiteSpaceJSON: function isWhiteSpaceJSON (x) {\n    return x === '\\u0020' ||\n        x === '\\u0009' ||\n        x === '\\u000A' ||\n        x === '\\u000D'\n  },\n  isLineTerminator: function isLineTerminator (x) {\n    // ok, here is the part when JSON is wrong\n    // section 7.3, table 3\n    return x === '\\u000A' ||\n        x === '\\u000D' ||\n        x === '\\u2028' ||\n        x === '\\u2029'\n  },\n  isLineTerminatorJSON: function isLineTerminatorJSON (x) {\n    return x === '\\u000A' ||\n        x === '\\u000D'\n  },\n  isIdentifierStart: function isIdentifierStart (x) {\n    return x === '$' ||\n        x === '_' ||\n        (x >= 'A' && x <= 'Z') ||\n        (x >= 'a' && x <= 'z') ||\n        (x >= '\\u0080' && Uni.NonAsciiIdentifierStart.test(x))\n  },\n  isIdentifierPart: function isIdentifierPart (x) {\n    return x === '$' ||\n        x === '_' ||\n        (x >= 'A' && x <= 'Z') ||\n        (x >= 'a' && x <= 'z') ||\n        (x >= '0' && x <= '9') || // <-- addition to Start\n        (x >= '\\u0080' && Uni.NonAsciiIdentifierPart.test(x))\n  },\n  // ECMAScript 5.1/Unicode v6.3.0 NonAsciiIdentifierStart:\n  NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // ECMAScript 5.1/Unicode v6.3.0 NonAsciiIdentifierPart:\n  NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n}\n\n/* globals Uni, getTexts */\n\n// Modified from https://github.com/rlidwka/jju/blob/master/lib/parse.js\n\nfunction isHexDigit (x) {\n  return (x >= '0' && x <= '9') ||\n      (x >= 'A' && x <= 'F') ||\n      (x >= 'a' && x <= 'f')\n}\n\nfunction isOctDigit (x) {\n  return x >= '0' && x <= '7'\n}\n\nfunction isDecDigit (x) {\n  return x >= '0' && x <= '9'\n}\n\nvar unescapeMap = {\n  '\\'': '\\'',\n  '\"': '\"',\n  '\\\\': '\\\\',\n  'b': '\\b',\n  'f': '\\f',\n  'n': '\\n',\n  'r': '\\r',\n  't': '\\t',\n  'v': '\\v',\n  '/': '/'\n}\n\nfunction parseCustom (input, options) { // eslint-disable-line no-unused-vars\n  if (typeof options === 'function') {\n    options = {\n      reviver: options\n    }\n  } else if (!options) {\n    options = {}\n  }\n\n  if (typeof input !== 'string' || !(input instanceof String)) {\n    input = String(input)\n  }\n\n  var json5 = options.mode === 'json5'\n  var ignoreComments = options.ignoreComments || options.mode === 'cjson' || json5\n  var ignoreTrailingCommas = options.ignoreTrailingCommas || json5\n  var allowSingleQuotedStrings = options.allowSingleQuotedStrings || json5\n  var allowDuplicateObjectKeys = options.allowDuplicateObjectKeys\n  var reviver = options.reviver\n\n  var isLineTerminator = json5 ? Uni.isLineTerminator : Uni.isLineTerminatorJSON\n  var isWhiteSpace = json5 ? Uni.isWhiteSpace : Uni.isWhiteSpaceJSON\n\n  var inputLength = input.length\n  var lineNumber = 0\n  var lineStart = 0\n  var position = 0\n  var stack = []\n\n  function generateMessage () {\n    var message\n    if (position < inputLength) {\n      var token = JSON.stringify(input[position])\n      message = 'Unexpected token ' + token\n    } else {\n      message = 'Unexpected end of input'\n    }\n    return message\n  }\n\n  function createError (message) {\n    var column = position - lineStart + 1\n    ++lineNumber\n    var texts = getTexts(message, input, position, lineNumber, column)\n    var error = SyntaxError(texts.message)\n    error.reason = texts.message\n    error.exzerpt = texts.exzerpt\n    error.pointer = texts.pointer\n    error.location = {\n      start: {\n        column: column,\n        line: lineNumber,\n        offset: position\n      }\n    }\n    return error\n  }\n\n  function fail (message) {\n    if (!message) {\n      message = generateMessage()\n    }\n    var error = createError(message)\n    throw error\n  }\n\n  function newLine (char) {\n    // account for <cr><lf>\n    if (char === '\\r' && input[position] === '\\n') {\n      ++position\n    }\n    lineStart = position\n    ++lineNumber\n  }\n\n  function parseGeneric () {\n    while (position < inputLength) {\n      var char = input[position++]\n      if (char === '\"' || (char === '\\'' && allowSingleQuotedStrings)) {\n        return parseString(char)\n      } else if (char === '{') {\n        return parseObject()\n      } else if (char === '[') {\n        return parseArray()\n      } else if (char === '-' || char === '.' || isDecDigit(char) ||\n                 (json5 && (char === '+' || char === 'I' || char === 'N'))) {\n        return parseNumber()\n      } else if (char === 'n') {\n        parseKeyword('null')\n        return null\n      } else if (char === 't') {\n        parseKeyword('true')\n        return true\n      } else if (char === 'f') {\n        parseKeyword('false')\n        return false\n      } else {\n        --position\n        return undefined\n      }\n    }\n  }\n\n  function parseKey () {\n    var result\n    while (position < inputLength) {\n      var char = input[position++]\n      if (char === '\"' || (char === '\\'' && allowSingleQuotedStrings)) {\n        return parseString(char)\n      } else if (char === '{') {\n        return parseObject()\n      } else if (char === '[') {\n        return parseArray()\n      } else if (char === '.' || isDecDigit(char)) {\n        return parseNumber(true)\n      } else if ((json5 && Uni.isIdentifierStart(char)) ||\n                 (char === '\\\\' && input[position] === 'u')) {\n        var rollback = position - 1\n        result = parseIdentifier()\n        if (result === undefined) {\n          position = rollback\n          return undefined\n        } else {\n          return result\n        }\n      } else {\n        --position\n        return undefined\n      }\n    }\n  }\n\n  function skipWhiteSpace () {\n    while (position < inputLength) {\n      var char = input[position++]\n      if (isLineTerminator(char)) {\n        newLine(char)\n      } else if (isWhiteSpace(char)) {\n        // nothing\n      } else if (char === '/' && ignoreComments &&\n                 (input[position] === '/' || input[position] === '*')) {\n        skipComment(input[position++] === '*')\n      } else {\n        --position\n        break\n      }\n    }\n  }\n\n  function skipComment (multiLine) {\n    while (position < inputLength) {\n      var char = input[position++]\n      if (isLineTerminator(char)) {\n        if (!multiLine) {\n          // let parent function deal with newline\n          --position\n          return\n        }\n        newLine(char)\n      } else if (char === '*' && multiLine) {\n        if (input[position] === '/') {\n          ++position\n          return\n        }\n      } else {\n        // nothing\n      }\n    }\n    if (multiLine) {\n      fail('Unclosed multiline comment')\n    }\n  }\n\n  function parseKeyword (keyword) {\n    // keyword[0] is not checked because it was checked earlier\n    var startPosition = position\n    for (var i = 1, keywordLength = keyword.length; i < keywordLength; ++i) {\n      if (position >= inputLength || keyword[i] !== input[position]) {\n        position = startPosition - 1\n        fail()\n      }\n      ++position\n    }\n  }\n\n  function parseObject () {\n    var result = {}\n    var emptyObject = {}\n    var isNotEmpty = false\n\n    while (position < inputLength) {\n      skipWhiteSpace()\n      var key = parseKey()\n      if (allowDuplicateObjectKeys === false && result[key]) {\n        fail('Duplicate key: \"' + key + '\"')\n      }\n      skipWhiteSpace()\n\n      var char = input[position++]\n      if (char === '}' && key === undefined) {\n        if (!ignoreTrailingCommas && isNotEmpty) {\n          --position\n          fail('Trailing comma in object')\n        }\n        return result\n      } else if (char === ':' && key !== undefined) {\n        skipWhiteSpace()\n        stack.push(key)\n        var value = parseGeneric()\n        stack.pop()\n\n        if (value === undefined) fail('No value found for key \"' + key + '\"')\n        if (typeof key !== 'string') {\n          if (!json5 || typeof key !== 'number') {\n            fail('Wrong key type: \"' + key + '\"')\n          }\n        }\n\n        if (key in emptyObject || emptyObject[key] != null) {\n          // silently ignore it\n        } else {\n          if (reviver) {\n            value = reviver(key, value)\n          }\n          if (value !== undefined) {\n            isNotEmpty = true\n            result[key] = value\n          }\n        }\n\n        skipWhiteSpace()\n        char = input[position++]\n        if (char === ',') {\n          continue\n        } else if (char === '}') {\n          return result\n        } else {\n          fail()\n        }\n      } else {\n        --position\n        fail()\n      }\n    }\n\n    fail()\n  }\n\n  function parseArray () {\n    var result = []\n    while (position < inputLength) {\n      skipWhiteSpace()\n      stack.push(result.length)\n      var item = parseGeneric()\n      stack.pop()\n      skipWhiteSpace()\n\n      var char = input[position++]\n      if (item !== undefined) {\n        if (reviver) {\n          item = reviver(String(result.length), item)\n        }\n        if (item === undefined) {\n          ++result.length\n          item = true // hack for check below, not included into result\n        } else {\n          result.push(item)\n        }\n      }\n\n      if (char === ',') {\n        if (item === undefined) {\n          fail('Elisions are not supported')\n        }\n      } else if (char === ']') {\n        if (!ignoreTrailingCommas && item === undefined && result.length) {\n          --position\n          fail('Trailing comma in array')\n        }\n        return result\n      } else {\n        --position\n        fail()\n      }\n    }\n  }\n\n  function parseNumber () {\n    // rewind because we don't know first char\n    --position\n\n    var start = position\n    var char = input[position++]\n    var toNumber = function (isOctal) {\n      var string = input.substr(start, position - start)\n      var result\n\n      if (isOctal) {\n        result = parseInt(string.replace(/^0o?/, ''), 8)\n      } else {\n        result = Number(string)\n      }\n\n      if (Number.isNaN(result)) {\n        --position\n        fail('Bad numeric literal - \"' + input.substr(start, position - start + 1) + '\"')\n      } else if (!json5 && !string.match(/^-?(0|[1-9][0-9]*)(\\.[0-9]+)?(e[+-]?[0-9]+)?$/i)) {\n        // additional restrictions imposed by json\n        --position\n        fail('Non-json numeric literal - \"' + input.substr(start, position - start + 1) + '\"')\n      } else {\n        return result\n      }\n    }\n\n    // ex: -5982475.249875e+29384\n    //     ^ skipping this\n    if (char === '-' || (char === '+' && json5)) {\n      char = input[position++]\n    }\n\n    if (char === 'N' && json5) {\n      parseKeyword('NaN')\n      return NaN\n    }\n\n    if (char === 'I' && json5) {\n      parseKeyword('Infinity')\n      // returning +inf or -inf\n      return toNumber()\n    }\n\n    if (char >= '1' && char <= '9') {\n      // ex: -5982475.249875e+29384\n      //        ^^^ skipping these\n      while (position < inputLength && isDecDigit(input[position])) {\n        ++position\n      }\n      char = input[position++]\n    }\n\n    // special case for leading zero: 0.123456\n    if (char === '0') {\n      char = input[position++]\n\n      //             new syntax, \"0o777\"           old syntax, \"0777\"\n      var isOctal = char === 'o' || char === 'O' || isOctDigit(char)\n      var isHex = char === 'x' || char === 'X'\n\n      if (json5 && (isOctal || isHex)) {\n        while (position < inputLength &&\n               (isHex ? isHexDigit : isOctDigit)(input[position])) {\n          ++position\n        }\n\n        var sign = 1\n        if (input[start] === '-') {\n          sign = -1\n          ++start\n        } else if (input[start] === '+') {\n          ++start\n        }\n\n        return sign * toNumber(isOctal)\n      }\n    }\n\n    if (char === '.') {\n      // ex: -5982475.249875e+29384\n      //                ^^^ skipping these\n      while (position < inputLength && isDecDigit(input[position])) {\n        ++position\n      }\n      char = input[position++]\n    }\n\n    if (char === 'e' || char === 'E') {\n      char = input[position++]\n      if (char === '-' || char === '+') {\n        ++position\n      }\n      // ex: -5982475.249875e+29384\n      //                       ^^^ skipping these\n      while (position < inputLength && isDecDigit(input[position])) {\n        ++position\n      }\n      char = input[position++]\n    }\n\n    // we have char in the buffer, so count for it\n    --position\n    return toNumber()\n  }\n\n  function parseIdentifier () {\n    // rewind because we don't know first char\n    --position\n\n    var result = ''\n    while (position < inputLength) {\n      var char = input[position++]\n      if (char === '\\\\' &&\n          input[position] === 'u' &&\n          isHexDigit(input[position + 1]) &&\n          isHexDigit(input[position + 2]) &&\n          isHexDigit(input[position + 3]) &&\n          isHexDigit(input[position + 4])) {\n        // UnicodeEscapeSequence\n        char = String.fromCharCode(parseInt(input.substr(position + 1, 4), 16))\n        position += 5\n      }\n\n      if (result.length) {\n        // identifier started\n        if (Uni.isIdentifierPart(char)) {\n          result += char\n        } else {\n          --position\n          return result\n        }\n      } else {\n        if (Uni.isIdentifierStart(char)) {\n          result += char\n        } else {\n          return undefined\n        }\n      }\n    }\n\n    fail()\n  }\n\n  function parseString (endChar) {\n    // 7.8.4 of ES262 spec\n    var result = ''\n    while (position < inputLength) {\n      var char = input[position++]\n      if (char === endChar) {\n        return result\n      } else if (char === '\\\\') {\n        if (position >= inputLength) {\n          fail()\n        }\n        char = input[position++]\n        if (unescapeMap[char] && (json5 || (char !== 'v' && (char !== \"'\" || allowSingleQuotedStrings)))) {\n          result += unescapeMap[char]\n        } else if (json5 && isLineTerminator(char)) {\n          // line continuation\n          newLine(char)\n        } else if (char === 'u' || (char === 'x' && json5)) {\n          // unicode/character escape sequence\n          var count = char === 'u' ? 4 : 2\n          // validation for \\uXXXX\n          for (var i = 0; i < count; ++i) {\n            if (position >= inputLength) {\n              fail()\n            }\n            if (!isHexDigit(input[position])) {\n              fail('Bad escape sequence')\n            }\n            position++\n          }\n          result += String.fromCharCode(parseInt(input.substr(position - count, count), 16))\n        } else if (json5 && isOctDigit(char)) {\n          var digits\n          if (char < '4' && isOctDigit(input[position]) && isOctDigit(input[position + 1])) {\n            // three-digit octal\n            digits = 3\n          } else if (isOctDigit(input[position])) {\n            // two-digit octal\n            digits = 2\n          } else {\n            digits = 1\n          }\n          position += digits - 1\n          result += String.fromCharCode(parseInt(input.substr(position - digits, digits), 8))\n        } else if (json5) {\n          // \\X -> x\n          result += char\n        } else {\n          --position\n          fail()\n        }\n      } else if (isLineTerminator(char)) {\n        fail()\n      } else {\n        if (!json5 && char.charCodeAt(0) < 32) {\n          --position\n          fail('Unexpected control character')\n        }\n        // SourceCharacter but not one of \" or \\ or LineTerminator\n        result += char\n      }\n    }\n\n    fail()\n  }\n\n  skipWhiteSpace()\n  var returnValue = parseGeneric()\n  if (returnValue !== undefined || position < inputLength) {\n    skipWhiteSpace()\n    if (position >= inputLength) {\n      if (reviver) {\n        returnValue = reviver('', returnValue)\n      }\n      return returnValue\n    } else {\n      fail()\n    }\n  } else {\n    if (position) {\n      fail('No data, only a whitespace')\n    } else {\n      fail('No data, empty input')\n    }\n  }\n}\n\nfunction getLineAndColumn (input, offset) {\n  var lines = input\n    .substr(0, offset)\n    .split(/\\r?\\n/)\n  var line = lines.length\n  var column = lines[line - 1].length + 1\n  return {\n    line: line,\n    column: column\n  }\n}\n\nfunction pastInput (input, offset) {\n  var start = Math.max(0, offset - 20)\n  var previous = input.substr(start, offset - start)\n  return (offset > 20 ? '...' : '') + previous.replace(/\\n/g, '')\n}\n\nfunction upcomingInput (input, offset) {\n  var start = Math.max(0, offset - 20)\n  start += offset - start\n  var rest = input.length - start\n  var next = input.substr(start, Math.min(20, rest))\n  return next.replace(/\\n/g, '') + (rest > 20 ? '...' : '')\n}\n\nfunction getPositionContext (input, offset) {\n  var past = pastInput(input, offset)\n  var upcoming = upcomingInput(input, offset)\n  var pointer = new Array(past.length + 1).join('-') + '^'\n  return {\n    exzerpt: past + upcoming,\n    pointer: pointer\n  }\n}\n\nfunction getReason (error) {\n  var message = error.message\n    .replace('JSON.parse: ', '') // SpiderMonkey\n    .replace('JSON Parse error: ', '') // SquirrelFish\n  var firstCharacter = message.charAt(0)\n  if (firstCharacter >= 'a') {\n    message = firstCharacter.toUpperCase() + message.substr(1)\n  }\n  return message\n}\n\nfunction getLocationOnV8 (input, reason) {\n  var match = / in JSON at position (\\d+)$/.exec(reason)\n  if (match) {\n    var offset = +match[1]\n    var location = getLineAndColumn(input, offset)\n    return {\n      offset: offset,\n      line: location.line,\n      column: location.column,\n      reason: reason.substr(0, match.index)\n    }\n  }\n}\n\nfunction checkUnexpectedEndOnV8 (input, reason) {\n  var match = / end of JSON input$/.exec(reason)\n  if (match) {\n    var offset = input.length\n    var location = getLineAndColumn(input, offset)\n    return {\n      offset: offset,\n      line: location.line,\n      column: location.column,\n      reason: reason.substr(0, match.index + 4)\n    }\n  }\n}\n\nfunction getLocationOnSpiderMonkey (input, reason) {\n  var match = / at line (\\d+) column (\\d+) of the JSON data$/.exec(reason)\n  if (match) {\n    var line = +match[1]\n    var column = +match[2]\n    var offset = getOffset(input, line, column) // eslint-disable-line no-undef\n    return {\n      offset: offset,\n      line: line,\n      column: column,\n      reason: reason.substr(0, match.index)\n    }\n  }\n}\n\nfunction getTexts (reason, input, offset, line, column) {\n  var position = getPositionContext(input, offset)\n  var exzerpt = position.exzerpt\n  var message, pointer\n  if (typeof line === 'number') {\n    pointer = position.pointer\n    message = 'Parse error on line ' + line + ', column ' +\n      column + ':\\n' + exzerpt + '\\n' + pointer + '\\n' + reason\n  } else {\n    message = 'Parse error in JSON input:\\n' + exzerpt + '\\n' + reason\n  }\n  return {\n    message: message,\n    exzerpt: exzerpt,\n    pointer: pointer\n  }\n}\n\nfunction improveNativeError (input, error) {\n  var reason = getReason(error)\n  var location = getLocationOnV8(input, reason) ||\n    checkUnexpectedEndOnV8(input, reason) ||\n    getLocationOnSpiderMonkey(input, reason)\n  var offset, line, column\n  if (location) {\n    offset = location.offset\n    line = location.line\n    column = location.column\n    reason = location.reason\n  } else {\n    offset = 0\n  }\n  error.reason = reason\n  var texts = getTexts(reason, input, offset, line, column)\n  error.message = texts.message\n  error.exzerpt = texts.exzerpt\n  if (texts.pointer) {\n    error.pointer = texts.pointer\n    error.location = {\n      start: {\n        column: column,\n        line: line,\n        offset: offset\n      }\n    }\n  }\n  return error\n}\n\nfunction parseNative (input, reviver) { // eslint-disable-line no-unused-vars\n  try {\n    return JSON.parse(input, reviver)\n  } catch (error) {\n    throw improveNativeError(input, error)\n  }\n}\n\n/* globals navigator, process, parseCustom, parseNative */\n\nfunction Parser (options, deprecate) {\n  if (deprecate !== false) {\n    console.warn('DEPRECATED: Do not instantiate an object of the class Parser. Call the method `parse` directly exported from the main module (`lib/jsonlint`).')\n  }\n  processOptions.call(this, options)\n}\n\nfunction processOptions (options) {\n  if (options) {\n    var changed = {}\n    if (options.ignoreComments !== undefined) {\n      changed.ignoreComments = this.ignoreComments\n      this.ignoreComments = options.ignoreComments\n    }\n    if (options.ignoreTrailingCommas !== undefined) {\n      changed.ignoreTrailingCommas = this.ignoreTrailingCommas\n      this.ignoreTrailingCommas = options.ignoreTrailingCommas\n    }\n    if (options.allowSingleQuotedStrings !== undefined) {\n      changed.allowSingleQuotedStrings = this.allowSingleQuotedStrings\n      this.allowSingleQuotedStrings = options.allowSingleQuotedStrings\n    }\n    if (options.allowDuplicateObjectKeys !== undefined) {\n      changed.allowDuplicateObjectKeys = this.allowDuplicateObjectKeys\n      this.allowDuplicateObjectKeys = options.allowDuplicateObjectKeys\n    }\n    if (options.mode !== undefined) {\n      changed.mode = this.mode\n      this.mode = options.mode\n    }\n    return changed\n  }\n}\n\nfunction restoreContext (changed) {\n  if (changed) {\n    for (var option in changed) {\n      var value = changed[option]\n      if (value === undefined) {\n        delete this[option]\n      } else {\n        this[option] = value\n      }\n    }\n  }\n}\n\nvar isSafari = typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)\nvar oldNode = typeof process !== 'undefined' && process.version.startsWith('v4.')\n\nfunction needsCustomParser () {\n  return this.ignoreComments || this.ignoreTrailingCommas ||\n    this.allowSingleQuotedStrings || this.allowDuplicateObjectKeys === false ||\n    this.mode === 'cjson' || this.mode === 'json5' || isSafari || oldNode\n}\n\nfunction getReviver (options) {\n  if (typeof options === 'function') {\n    return options\n  } else if (options) {\n    return options.reviver\n  }\n}\n\nParser.prototype.constructor = Parser\nParser.prototype.Parser = Parser\n\nParser.prototype.parse = function (input, options, deprecate) {\n  if (deprecate !== false) {\n    console.warn('DEPRECATED: Do not call the instance method `parse`. method  Call the `parse` directly exported from the main module (`lib/jsonlint`).')\n  }\n  var changed = processOptions.call(this, options)\n  try {\n    return needsCustomParser.call(this)\n      ? parseCustom.call(this, input, options)\n      : parseNative(input, getReviver(options))\n  } finally {\n    restoreContext.call(this, changed)\n  }\n}\n\nvar jsonlint = new Parser(undefined, false) // eslint-disable-line no-unused-vars\n\n  exports.parser = jsonlint\n  exports.Parser = jsonlint.Parser\n  exports.parse = function (input, options) {\n    return jsonlint.parse(input, options, false)\n  }\n  exports.parseNative = parseNative\n  exports.parseCustom = parseCustom\n  Object.defineProperty(exports, '__esModule', { value: true })\n}));\n"]}